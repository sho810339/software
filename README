整體Structure：
project/
├── app.js                   # 主應用入口
├── routes/                  # 路由層
│   ├── CTManagementPageRoutes.js    
│   ├── loginPageRoutes.js    
│   ├── WorkerEditRoutes.js    
│   ├── WorkerPageRoutes.js     
├── controllers/             # 控制器層
│   ├── CTManagementPageController.js  
│   ├── loginPageController.js 
│   ├── WorkerEditController.js  
│   ├── WorkerPageController.js 
├── models/                  # 資料層
│   ├── Worker.js          
│   ├── Attendance.js    
│   ├── Login.js             
│   ├── Notification.js  
│   ├── Report.js  
├── config/                  # 配置
│   ├── database.js          # 資料庫連線設定


修改：
1. CT api1修改
3. login password 修改為 pattern
4. WorkerPageController api2修改，本來使用舊版格式
5. WorkerPageController api4新增預設check=1 (所以Report表中的check是啥?)


測試流程：
1. node sync.js (創建空的table，也可以用來重設table)
2. node seed.js (給空的table新增一些資料)
3. node app.js
4. 要用mysql worckbench的話可以匯入fisherman.sql，方便測試
5. 要用postman的話我有弄好一個workspace然後用email邀請你們